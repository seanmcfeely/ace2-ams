"""Initial

Revision ID: 51170f8e158b
Revises: 
Create Date: 2022-07-07 15:34:37.907297
"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic
revision = '51170f8e158b'
down_revision = None
branch_labels = None
depends_on = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alert_disposition',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('rank')
    )
    op.create_index(op.f('ix_alert_disposition_value'), 'alert_disposition', ['value'], unique=True)
    op.create_table('analysis_module_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('cache_seconds', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('extended_version', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('manual', sa.Boolean(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('value', 'version', name='value_version_uc')
    )
    op.create_index('amt_value_trgm', 'analysis_module_type', ['value'], unique=False, postgresql_ops={'value': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_index(op.f('ix_analysis_module_type_value'), 'analysis_module_type', ['value'], unique=False)
    op.create_index(op.f('ix_analysis_module_type_version'), 'analysis_module_type', ['version'], unique=False)
    op.create_index('value_version', 'analysis_module_type', ['value', 'version'], unique=False)
    op.create_table('event_prevention_tool',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_prevention_tool_value'), 'event_prevention_tool', ['value'], unique=True)
    op.create_table('event_remediation',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_remediation_value'), 'event_remediation', ['value'], unique=True)
    op.create_table('event_severity',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_severity_value'), 'event_severity', ['value'], unique=True)
    op.create_table('event_source',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_source_value'), 'event_source', ['value'], unique=True)
    op.create_table('event_status',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_status_value'), 'event_status', ['value'], unique=True)
    op.create_table('event_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_type_value'), 'event_type', ['value'], unique=True)
    op.create_table('event_vector',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_vector_value'), 'event_vector', ['value'], unique=True)
    op.create_table('metadata',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('metadata_type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('observable_relationship_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_observable_relationship_type_value'), 'observable_relationship_type', ['value'], unique=True)
    op.create_table('observable_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_observable_type_value'), 'observable_type', ['value'], unique=True)
    op.create_table('queue',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_queue_value'), 'queue', ['value'], unique=True)
    op.create_table('seed',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('seed_time', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_seed_seed_time'), 'seed', ['seed_time'], unique=False)
    op.create_table('submission_tool',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_submission_tool_value'), 'submission_tool', ['value'], unique=True)
    op.create_table('submission_tool_instance',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_submission_tool_instance_value'), 'submission_tool_instance', ['value'], unique=True)
    op.create_table('submission_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_submission_type_value'), 'submission_type', ['value'], unique=True)
    op.create_table('threat',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_threat_value'), 'threat', ['value'], unique=True)
    op.create_table('threat_actor',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_threat_actor_value'), 'threat_actor', ['value'], unique=True)
    op.create_table('threat_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_threat_type_value'), 'threat_type', ['value'], unique=True)
    op.create_table('user_role',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_user_role_value'), 'user_role', ['value'], unique=True)
    op.create_table('analysis_module_type_observable_type_mapping',
    sa.Column('analysis_module_type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('observable_type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['analysis_module_type_uuid'], ['analysis_module_type.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['observable_type_uuid'], ['observable_type.uuid'], ),
    sa.PrimaryKeyConstraint('analysis_module_type_uuid', 'observable_type_uuid')
    )
    op.create_index(op.f('ix_analysis_module_type_observable_type_mapping_analysis_module_type_uuid'), 'analysis_module_type_observable_type_mapping', ['analysis_module_type_uuid'], unique=False)
    op.create_index(op.f('ix_analysis_module_type_observable_type_mapping_observable_type_uuid'), 'analysis_module_type_observable_type_mapping', ['observable_type_uuid'], unique=False)
    op.create_table('event_prevention_tool_queue_mapping',
    sa.Column('event_prevention_tool_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_prevention_tool_uuid'], ['event_prevention_tool.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['queue_uuid'], ['queue.uuid'], ),
    sa.PrimaryKeyConstraint('event_prevention_tool_uuid', 'queue_uuid')
    )
    op.create_index(op.f('ix_event_prevention_tool_queue_mapping_event_prevention_tool_uuid'), 'event_prevention_tool_queue_mapping', ['event_prevention_tool_uuid'], unique=False)
    op.create_index(op.f('ix_event_prevention_tool_queue_mapping_queue_uuid'), 'event_prevention_tool_queue_mapping', ['queue_uuid'], unique=False)
    op.create_table('event_remediation_queue_mapping',
    sa.Column('event_remediation_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_remediation_uuid'], ['event_remediation.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['queue_uuid'], ['queue.uuid'], ),
    sa.PrimaryKeyConstraint('event_remediation_uuid', 'queue_uuid')
    )
    op.create_index(op.f('ix_event_remediation_queue_mapping_event_remediation_uuid'), 'event_remediation_queue_mapping', ['event_remediation_uuid'], unique=False)
    op.create_index(op.f('ix_event_remediation_queue_mapping_queue_uuid'), 'event_remediation_queue_mapping', ['queue_uuid'], unique=False)
    op.create_table('event_severity_queue_mapping',
    sa.Column('event_severity_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_severity_uuid'], ['event_severity.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['queue_uuid'], ['queue.uuid'], ),
    sa.PrimaryKeyConstraint('event_severity_uuid', 'queue_uuid')
    )
    op.create_index(op.f('ix_event_severity_queue_mapping_event_severity_uuid'), 'event_severity_queue_mapping', ['event_severity_uuid'], unique=False)
    op.create_index(op.f('ix_event_severity_queue_mapping_queue_uuid'), 'event_severity_queue_mapping', ['queue_uuid'], unique=False)
    op.create_table('event_source_queue_mapping',
    sa.Column('event_source_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_source_uuid'], ['event_source.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['queue_uuid'], ['queue.uuid'], ),
    sa.PrimaryKeyConstraint('event_source_uuid', 'queue_uuid')
    )
    op.create_index(op.f('ix_event_source_queue_mapping_event_source_uuid'), 'event_source_queue_mapping', ['event_source_uuid'], unique=False)
    op.create_index(op.f('ix_event_source_queue_mapping_queue_uuid'), 'event_source_queue_mapping', ['queue_uuid'], unique=False)
    op.create_table('event_status_queue_mapping',
    sa.Column('event_status_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_status_uuid'], ['event_status.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['queue_uuid'], ['queue.uuid'], ),
    sa.PrimaryKeyConstraint('event_status_uuid', 'queue_uuid')
    )
    op.create_index(op.f('ix_event_status_queue_mapping_event_status_uuid'), 'event_status_queue_mapping', ['event_status_uuid'], unique=False)
    op.create_index(op.f('ix_event_status_queue_mapping_queue_uuid'), 'event_status_queue_mapping', ['queue_uuid'], unique=False)
    op.create_table('event_type_queue_mapping',
    sa.Column('event_type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_type_uuid'], ['event_type.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['queue_uuid'], ['queue.uuid'], ),
    sa.PrimaryKeyConstraint('event_type_uuid', 'queue_uuid')
    )
    op.create_index(op.f('ix_event_type_queue_mapping_event_type_uuid'), 'event_type_queue_mapping', ['event_type_uuid'], unique=False)
    op.create_index(op.f('ix_event_type_queue_mapping_queue_uuid'), 'event_type_queue_mapping', ['queue_uuid'], unique=False)
    op.create_table('event_vector_queue_mapping',
    sa.Column('event_vector_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_vector_uuid'], ['event_vector.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['queue_uuid'], ['queue.uuid'], ),
    sa.PrimaryKeyConstraint('event_vector_uuid', 'queue_uuid')
    )
    op.create_index(op.f('ix_event_vector_queue_mapping_event_vector_uuid'), 'event_vector_queue_mapping', ['event_vector_uuid'], unique=False)
    op.create_index(op.f('ix_event_vector_queue_mapping_queue_uuid'), 'event_vector_queue_mapping', ['queue_uuid'], unique=False)
    op.create_table('metadata_detection_point',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['uuid'], ['metadata.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_metadata_detection_point_value'), 'metadata_detection_point', ['value'], unique=True)
    op.create_table('metadata_directive',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['uuid'], ['metadata.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_metadata_directive_value'), 'metadata_directive', ['value'], unique=True)
    op.create_table('metadata_display_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['uuid'], ['metadata.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_metadata_display_type_value'), 'metadata_display_type', ['value'], unique=True)
    op.create_table('metadata_display_value',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['uuid'], ['metadata.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_metadata_display_value_value'), 'metadata_display_value', ['value'], unique=True)
    op.create_table('metadata_sort',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['uuid'], ['metadata.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_metadata_sort_value'), 'metadata_sort', ['value'], unique=True)
    op.create_table('metadata_tag',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['uuid'], ['metadata.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_metadata_tag_value'), 'metadata_tag', ['value'], unique=True)
    op.create_table('metadata_time',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['uuid'], ['metadata.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_metadata_time_value'), 'metadata_time', ['value'], unique=True)
    op.create_table('observable',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('context', sa.String(), nullable=True),
    sa.Column('expires_on', sa.DateTime(timezone=True), nullable=True),
    sa.Column('for_detection', sa.Boolean(), nullable=False),
    sa.Column('type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('whitelisted', sa.Boolean(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('version', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.ForeignKeyConstraint(['type_uuid'], ['observable_type.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('type_uuid', 'value', name='type_value_uc')
    )
    op.create_index(op.f('ix_observable_for_detection'), 'observable', ['for_detection'], unique=False)
    op.create_index(op.f('ix_observable_whitelisted'), 'observable', ['whitelisted'], unique=False)
    op.create_index('observable_value_trgm', 'observable', ['value'], unique=False, postgresql_ops={'value': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_index('type_value', 'observable', ['type_uuid', 'value'], unique=False)
    op.create_table('threat_actor_queue_mapping',
    sa.Column('threat_actor_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['queue_uuid'], ['queue.uuid'], ),
    sa.ForeignKeyConstraint(['threat_actor_uuid'], ['threat_actor.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('threat_actor_uuid', 'queue_uuid')
    )
    op.create_index(op.f('ix_threat_actor_queue_mapping_queue_uuid'), 'threat_actor_queue_mapping', ['queue_uuid'], unique=False)
    op.create_index(op.f('ix_threat_actor_queue_mapping_threat_actor_uuid'), 'threat_actor_queue_mapping', ['threat_actor_uuid'], unique=False)
    op.create_table('threat_queue_mapping',
    sa.Column('threat_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['queue_uuid'], ['queue.uuid'], ),
    sa.ForeignKeyConstraint(['threat_uuid'], ['threat.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('threat_uuid', 'queue_uuid')
    )
    op.create_index(op.f('ix_threat_queue_mapping_queue_uuid'), 'threat_queue_mapping', ['queue_uuid'], unique=False)
    op.create_index(op.f('ix_threat_queue_mapping_threat_uuid'), 'threat_queue_mapping', ['threat_uuid'], unique=False)
    op.create_table('threat_threat_type_mapping',
    sa.Column('threat_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('threat_type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['threat_type_uuid'], ['threat_type.uuid'], ),
    sa.ForeignKeyConstraint(['threat_uuid'], ['threat.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('threat_uuid', 'threat_type_uuid')
    )
    op.create_index(op.f('ix_threat_threat_type_mapping_threat_type_uuid'), 'threat_threat_type_mapping', ['threat_type_uuid'], unique=False)
    op.create_index(op.f('ix_threat_threat_type_mapping_threat_uuid'), 'threat_threat_type_mapping', ['threat_uuid'], unique=False)
    op.create_table('threat_type_queue_mapping',
    sa.Column('threat_type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['queue_uuid'], ['queue.uuid'], ),
    sa.ForeignKeyConstraint(['threat_type_uuid'], ['threat_type.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('threat_type_uuid', 'queue_uuid')
    )
    op.create_index(op.f('ix_threat_type_queue_mapping_queue_uuid'), 'threat_type_queue_mapping', ['queue_uuid'], unique=False)
    op.create_index(op.f('ix_threat_type_queue_mapping_threat_type_uuid'), 'threat_type_queue_mapping', ['threat_type_uuid'], unique=False)
    op.create_table('user',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('default_alert_queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('default_event_queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=False),
    sa.Column('training', sa.Boolean(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['default_alert_queue_uuid'], ['queue.uuid'], ),
    sa.ForeignKeyConstraint(['default_event_queue_uuid'], ['queue.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('analysis',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('analysis_module_type_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('cached_during', postgresql.TSTZRANGE(), nullable=True),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('run_time', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('stack_trace', sa.String(), nullable=True),
    sa.Column('summary', sa.String(), nullable=True),
    sa.Column('target_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    postgresql.ExcludeConstraint((sa.column('analysis_module_type_uuid'), '='), (sa.column('target_uuid'), '='), (sa.column('cached_during'), '&&'), using='gist', name='cached_analysis_uc'),
    sa.ForeignKeyConstraint(['analysis_module_type_uuid'], ['analysis_module_type.uuid'], ),
    sa.ForeignKeyConstraint(['target_uuid'], ['observable.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index('analysis_module_type_target_cached_during_idx', 'analysis', ['analysis_module_type_uuid', 'target_uuid', 'cached_during'], unique=False)
    op.create_index(op.f('ix_analysis_run_time'), 'analysis', ['run_time'], unique=False)
    op.create_table('analysis_module_type_directive_mapping',
    sa.Column('analysis_module_type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('directive_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['analysis_module_type_uuid'], ['analysis_module_type.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['directive_uuid'], ['metadata_directive.uuid'], ),
    sa.PrimaryKeyConstraint('analysis_module_type_uuid', 'directive_uuid')
    )
    op.create_index(op.f('ix_analysis_module_type_directive_mapping_analysis_module_type_uuid'), 'analysis_module_type_directive_mapping', ['analysis_module_type_uuid'], unique=False)
    op.create_index(op.f('ix_analysis_module_type_directive_mapping_directive_uuid'), 'analysis_module_type_directive_mapping', ['directive_uuid'], unique=False)
    op.create_table('analysis_module_type_tag_mapping',
    sa.Column('analysis_module_type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('tag_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['analysis_module_type_uuid'], ['analysis_module_type.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_uuid'], ['metadata_tag.uuid'], ),
    sa.PrimaryKeyConstraint('analysis_module_type_uuid', 'tag_uuid')
    )
    op.create_index(op.f('ix_analysis_module_type_tag_mapping_analysis_module_type_uuid'), 'analysis_module_type_tag_mapping', ['analysis_module_type_uuid'], unique=False)
    op.create_index(op.f('ix_analysis_module_type_tag_mapping_tag_uuid'), 'analysis_module_type_tag_mapping', ['tag_uuid'], unique=False)
    op.create_table('event',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('alert_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('contain_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('disposition_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('event_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('owner_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('ownership_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('remediation_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('severity_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('source_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('status_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('type_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('version', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.ForeignKeyConstraint(['owner_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['queue_uuid'], ['queue.uuid'], ),
    sa.ForeignKeyConstraint(['severity_uuid'], ['event_severity.uuid'], ),
    sa.ForeignKeyConstraint(['source_uuid'], ['event_source.uuid'], ),
    sa.ForeignKeyConstraint(['status_uuid'], ['event_status.uuid'], ),
    sa.ForeignKeyConstraint(['type_uuid'], ['event_type.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_alert_time'), 'event', ['alert_time'], unique=False)
    op.create_index(op.f('ix_event_contain_time'), 'event', ['contain_time'], unique=False)
    op.create_index(op.f('ix_event_created_time'), 'event', ['created_time'], unique=False)
    op.create_index(op.f('ix_event_disposition_time'), 'event', ['disposition_time'], unique=False)
    op.create_index(op.f('ix_event_event_time'), 'event', ['event_time'], unique=False)
    op.create_index(op.f('ix_event_ownership_time'), 'event', ['ownership_time'], unique=False)
    op.create_index(op.f('ix_event_queue_uuid'), 'event', ['queue_uuid'], unique=False)
    op.create_index(op.f('ix_event_remediation_time'), 'event', ['remediation_time'], unique=False)
    op.create_table('observable_history',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('action_time', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('field', sa.String(), nullable=True),
    sa.Column('diff', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('snapshot', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('record_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('action_by_user_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['action_by_user_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['record_uuid'], ['observable.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_observable_history_action_by_user_uuid'), 'observable_history', ['action_by_user_uuid'], unique=False)
    op.create_index(op.f('ix_observable_history_record_uuid'), 'observable_history', ['record_uuid'], unique=False)
    op.create_table('observable_relationship',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('observable_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('related_observable_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('type_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['observable_uuid'], ['observable.uuid'], ),
    sa.ForeignKeyConstraint(['related_observable_uuid'], ['observable.uuid'], ),
    sa.ForeignKeyConstraint(['type_uuid'], ['observable_relationship_type.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('observable_uuid', 'related_observable_uuid', 'type_uuid', name='observable_related_type_uc')
    )
    op.create_index(op.f('ix_observable_relationship_observable_uuid'), 'observable_relationship', ['observable_uuid'], unique=False)
    op.create_table('observable_tag_mapping',
    sa.Column('observable_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('tag_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['observable_uuid'], ['observable.uuid'], ),
    sa.ForeignKeyConstraint(['tag_uuid'], ['metadata_tag.uuid'], ),
    sa.PrimaryKeyConstraint('observable_uuid', 'tag_uuid')
    )
    op.create_index(op.f('ix_observable_tag_mapping_observable_uuid'), 'observable_tag_mapping', ['observable_uuid'], unique=False)
    op.create_index(op.f('ix_observable_tag_mapping_tag_uuid'), 'observable_tag_mapping', ['tag_uuid'], unique=False)
    op.create_table('user_history',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('action_time', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('field', sa.String(), nullable=True),
    sa.Column('diff', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('snapshot', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('record_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('action_by_user_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['action_by_user_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['record_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_user_history_action_by_user_uuid'), 'user_history', ['action_by_user_uuid'], unique=False)
    op.create_index(op.f('ix_user_history_record_uuid'), 'user_history', ['record_uuid'], unique=False)
    op.create_table('user_role_mapping',
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_role_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['user_role_uuid'], ['user_role.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_uuid', 'user_role_uuid')
    )
    op.create_index(op.f('ix_user_role_mapping_user_role_uuid'), 'user_role_mapping', ['user_role_uuid'], unique=False)
    op.create_index(op.f('ix_user_role_mapping_user_uuid'), 'user_role_mapping', ['user_uuid'], unique=False)
    op.create_table('analysis_child_observable_mapping',
    sa.Column('analysis_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('observable_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['analysis_uuid'], ['analysis.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['observable_uuid'], ['observable.uuid'], ),
    sa.PrimaryKeyConstraint('analysis_uuid', 'observable_uuid')
    )
    op.create_index(op.f('ix_analysis_child_observable_mapping_analysis_uuid'), 'analysis_child_observable_mapping', ['analysis_uuid'], unique=False)
    op.create_index(op.f('ix_analysis_child_observable_mapping_observable_uuid'), 'analysis_child_observable_mapping', ['observable_uuid'], unique=False)
    op.create_table('analysis_metadata',
    sa.Column('analysis_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('observable_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('metadata_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['analysis_uuid'], ['analysis.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['metadata_uuid'], ['metadata.uuid'], ),
    sa.ForeignKeyConstraint(['observable_uuid'], ['observable.uuid'], ),
    sa.PrimaryKeyConstraint('analysis_uuid', 'observable_uuid', 'metadata_uuid')
    )
    op.create_index(op.f('ix_analysis_metadata_analysis_uuid'), 'analysis_metadata', ['analysis_uuid'], unique=False)
    op.create_table('event_comment',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('insert_time', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('event_uuid', 'value', name='event_value_uc')
    )
    op.create_index('event_comment_value_trgm', 'event_comment', ['value'], unique=False, postgresql_ops={'value': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_index(op.f('ix_event_comment_event_uuid'), 'event_comment', ['event_uuid'], unique=False)
    op.create_table('event_history',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('action_time', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('field', sa.String(), nullable=True),
    sa.Column('diff', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('snapshot', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('record_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('action_by_user_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['action_by_user_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['record_uuid'], ['event.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_history_action_by_user_uuid'), 'event_history', ['action_by_user_uuid'], unique=False)
    op.create_index(op.f('ix_event_history_record_uuid'), 'event_history', ['record_uuid'], unique=False)
    op.create_table('event_prevention_tool_mapping',
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('prevention_tool_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['prevention_tool_uuid'], ['event_prevention_tool.uuid'], ),
    sa.PrimaryKeyConstraint('event_uuid', 'prevention_tool_uuid')
    )
    op.create_index(op.f('ix_event_prevention_tool_mapping_event_uuid'), 'event_prevention_tool_mapping', ['event_uuid'], unique=False)
    op.create_index(op.f('ix_event_prevention_tool_mapping_prevention_tool_uuid'), 'event_prevention_tool_mapping', ['prevention_tool_uuid'], unique=False)
    op.create_table('event_remediation_mapping',
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('remediation_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['remediation_uuid'], ['event_remediation.uuid'], ),
    sa.PrimaryKeyConstraint('event_uuid', 'remediation_uuid')
    )
    op.create_index(op.f('ix_event_remediation_mapping_event_uuid'), 'event_remediation_mapping', ['event_uuid'], unique=False)
    op.create_index(op.f('ix_event_remediation_mapping_remediation_uuid'), 'event_remediation_mapping', ['remediation_uuid'], unique=False)
    op.create_table('event_tag_mapping',
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('tag_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['tag_uuid'], ['metadata_tag.uuid'], ),
    sa.PrimaryKeyConstraint('event_uuid', 'tag_uuid')
    )
    op.create_index(op.f('ix_event_tag_mapping_event_uuid'), 'event_tag_mapping', ['event_uuid'], unique=False)
    op.create_index(op.f('ix_event_tag_mapping_tag_uuid'), 'event_tag_mapping', ['tag_uuid'], unique=False)
    op.create_table('event_threat_actor_mapping',
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('threat_actor_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['threat_actor_uuid'], ['threat_actor.uuid'], ),
    sa.PrimaryKeyConstraint('event_uuid', 'threat_actor_uuid')
    )
    op.create_index(op.f('ix_event_threat_actor_mapping_event_uuid'), 'event_threat_actor_mapping', ['event_uuid'], unique=False)
    op.create_index(op.f('ix_event_threat_actor_mapping_threat_actor_uuid'), 'event_threat_actor_mapping', ['threat_actor_uuid'], unique=False)
    op.create_table('event_threat_mapping',
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('threat_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['threat_uuid'], ['threat.uuid'], ),
    sa.PrimaryKeyConstraint('event_uuid', 'threat_uuid')
    )
    op.create_index(op.f('ix_event_threat_mapping_event_uuid'), 'event_threat_mapping', ['event_uuid'], unique=False)
    op.create_index(op.f('ix_event_threat_mapping_threat_uuid'), 'event_threat_mapping', ['threat_uuid'], unique=False)
    op.create_table('event_vector_mapping',
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('vector_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['vector_uuid'], ['event_vector.uuid'], ),
    sa.PrimaryKeyConstraint('event_uuid', 'vector_uuid')
    )
    op.create_index(op.f('ix_event_vector_mapping_event_uuid'), 'event_vector_mapping', ['event_uuid'], unique=False)
    op.create_index(op.f('ix_event_vector_mapping_vector_uuid'), 'event_vector_mapping', ['vector_uuid'], unique=False)
    op.create_table('submission',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('alert', sa.Boolean(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('disposition_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('disposition_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('disposition_user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('event_time', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('insert_time', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('instructions', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('owner_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('ownership_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('root_analysis_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('tool_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('tool_instance_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('version', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.ForeignKeyConstraint(['disposition_user_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['disposition_uuid'], ['alert_disposition.uuid'], ),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['owner_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['queue_uuid'], ['queue.uuid'], ),
    sa.ForeignKeyConstraint(['root_analysis_uuid'], ['analysis.uuid'], ),
    sa.ForeignKeyConstraint(['tool_instance_uuid'], ['submission_tool_instance.uuid'], ),
    sa.ForeignKeyConstraint(['tool_uuid'], ['submission_tool.uuid'], ),
    sa.ForeignKeyConstraint(['type_uuid'], ['submission_type.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_submission_alert'), 'submission', ['alert'], unique=False)
    op.create_index(op.f('ix_submission_disposition_time'), 'submission', ['disposition_time'], unique=False)
    op.create_index(op.f('ix_submission_disposition_user_uuid'), 'submission', ['disposition_user_uuid'], unique=False)
    op.create_index(op.f('ix_submission_disposition_uuid'), 'submission', ['disposition_uuid'], unique=False)
    op.create_index(op.f('ix_submission_event_time'), 'submission', ['event_time'], unique=False)
    op.create_index(op.f('ix_submission_event_uuid'), 'submission', ['event_uuid'], unique=False)
    op.create_index(op.f('ix_submission_insert_time'), 'submission', ['insert_time'], unique=False)
    op.create_index(op.f('ix_submission_owner_uuid'), 'submission', ['owner_uuid'], unique=False)
    op.create_index(op.f('ix_submission_ownership_time'), 'submission', ['ownership_time'], unique=False)
    op.create_index(op.f('ix_submission_queue_uuid'), 'submission', ['queue_uuid'], unique=False)
    op.create_index(op.f('ix_submission_root_analysis_uuid'), 'submission', ['root_analysis_uuid'], unique=False)
    op.create_index(op.f('ix_submission_tool_instance_uuid'), 'submission', ['tool_instance_uuid'], unique=False)
    op.create_index(op.f('ix_submission_tool_uuid'), 'submission', ['tool_uuid'], unique=False)
    op.create_index(op.f('ix_submission_type_uuid'), 'submission', ['type_uuid'], unique=False)
    op.create_index('name_trgm', 'submission', ['name'], unique=False, postgresql_ops={'name': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_table('submission_analysis_mapping',
    sa.Column('submission_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('analysis_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['analysis_uuid'], ['analysis.uuid'], ),
    sa.ForeignKeyConstraint(['submission_uuid'], ['submission.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('submission_uuid', 'analysis_uuid')
    )
    op.create_index(op.f('ix_submission_analysis_mapping_analysis_uuid'), 'submission_analysis_mapping', ['analysis_uuid'], unique=False)
    op.create_index(op.f('ix_submission_analysis_mapping_submission_uuid'), 'submission_analysis_mapping', ['submission_uuid'], unique=False)
    op.create_table('submission_comment',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('insert_time', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('submission_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['submission_uuid'], ['submission.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('submission_uuid', 'value', name='submission_value_uc')
    )
    op.create_index(op.f('ix_submission_comment_submission_uuid'), 'submission_comment', ['submission_uuid'], unique=False)
    op.create_index('submission_comment_value_trgm', 'submission_comment', ['value'], unique=False, postgresql_ops={'value': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_table('submission_history',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('action_time', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('field', sa.String(), nullable=True),
    sa.Column('diff', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('snapshot', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('record_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('action_by_user_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['action_by_user_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['record_uuid'], ['submission.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_submission_history_action_by_user_uuid'), 'submission_history', ['action_by_user_uuid'], unique=False)
    op.create_index(op.f('ix_submission_history_record_uuid'), 'submission_history', ['record_uuid'], unique=False)
    op.create_table('submission_tag_mapping',
    sa.Column('submission_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('tag_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['submission_uuid'], ['submission.uuid'], ),
    sa.ForeignKeyConstraint(['tag_uuid'], ['metadata_tag.uuid'], ),
    sa.PrimaryKeyConstraint('submission_uuid', 'tag_uuid')
    )
    op.create_index(op.f('ix_submission_tag_mapping_submission_uuid'), 'submission_tag_mapping', ['submission_uuid'], unique=False)
    op.create_index(op.f('ix_submission_tag_mapping_tag_uuid'), 'submission_tag_mapping', ['tag_uuid'], unique=False)
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_submission_tag_mapping_tag_uuid'), table_name='submission_tag_mapping')
    op.drop_index(op.f('ix_submission_tag_mapping_submission_uuid'), table_name='submission_tag_mapping')
    op.drop_table('submission_tag_mapping')
    op.drop_index(op.f('ix_submission_history_record_uuid'), table_name='submission_history')
    op.drop_index(op.f('ix_submission_history_action_by_user_uuid'), table_name='submission_history')
    op.drop_table('submission_history')
    op.drop_index('submission_comment_value_trgm', table_name='submission_comment', postgresql_ops={'value': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_index(op.f('ix_submission_comment_submission_uuid'), table_name='submission_comment')
    op.drop_table('submission_comment')
    op.drop_index(op.f('ix_submission_analysis_mapping_submission_uuid'), table_name='submission_analysis_mapping')
    op.drop_index(op.f('ix_submission_analysis_mapping_analysis_uuid'), table_name='submission_analysis_mapping')
    op.drop_table('submission_analysis_mapping')
    op.drop_index('name_trgm', table_name='submission', postgresql_ops={'name': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_index(op.f('ix_submission_type_uuid'), table_name='submission')
    op.drop_index(op.f('ix_submission_tool_uuid'), table_name='submission')
    op.drop_index(op.f('ix_submission_tool_instance_uuid'), table_name='submission')
    op.drop_index(op.f('ix_submission_root_analysis_uuid'), table_name='submission')
    op.drop_index(op.f('ix_submission_queue_uuid'), table_name='submission')
    op.drop_index(op.f('ix_submission_ownership_time'), table_name='submission')
    op.drop_index(op.f('ix_submission_owner_uuid'), table_name='submission')
    op.drop_index(op.f('ix_submission_insert_time'), table_name='submission')
    op.drop_index(op.f('ix_submission_event_uuid'), table_name='submission')
    op.drop_index(op.f('ix_submission_event_time'), table_name='submission')
    op.drop_index(op.f('ix_submission_disposition_uuid'), table_name='submission')
    op.drop_index(op.f('ix_submission_disposition_user_uuid'), table_name='submission')
    op.drop_index(op.f('ix_submission_disposition_time'), table_name='submission')
    op.drop_index(op.f('ix_submission_alert'), table_name='submission')
    op.drop_table('submission')
    op.drop_index(op.f('ix_event_vector_mapping_vector_uuid'), table_name='event_vector_mapping')
    op.drop_index(op.f('ix_event_vector_mapping_event_uuid'), table_name='event_vector_mapping')
    op.drop_table('event_vector_mapping')
    op.drop_index(op.f('ix_event_threat_mapping_threat_uuid'), table_name='event_threat_mapping')
    op.drop_index(op.f('ix_event_threat_mapping_event_uuid'), table_name='event_threat_mapping')
    op.drop_table('event_threat_mapping')
    op.drop_index(op.f('ix_event_threat_actor_mapping_threat_actor_uuid'), table_name='event_threat_actor_mapping')
    op.drop_index(op.f('ix_event_threat_actor_mapping_event_uuid'), table_name='event_threat_actor_mapping')
    op.drop_table('event_threat_actor_mapping')
    op.drop_index(op.f('ix_event_tag_mapping_tag_uuid'), table_name='event_tag_mapping')
    op.drop_index(op.f('ix_event_tag_mapping_event_uuid'), table_name='event_tag_mapping')
    op.drop_table('event_tag_mapping')
    op.drop_index(op.f('ix_event_remediation_mapping_remediation_uuid'), table_name='event_remediation_mapping')
    op.drop_index(op.f('ix_event_remediation_mapping_event_uuid'), table_name='event_remediation_mapping')
    op.drop_table('event_remediation_mapping')
    op.drop_index(op.f('ix_event_prevention_tool_mapping_prevention_tool_uuid'), table_name='event_prevention_tool_mapping')
    op.drop_index(op.f('ix_event_prevention_tool_mapping_event_uuid'), table_name='event_prevention_tool_mapping')
    op.drop_table('event_prevention_tool_mapping')
    op.drop_index(op.f('ix_event_history_record_uuid'), table_name='event_history')
    op.drop_index(op.f('ix_event_history_action_by_user_uuid'), table_name='event_history')
    op.drop_table('event_history')
    op.drop_index(op.f('ix_event_comment_event_uuid'), table_name='event_comment')
    op.drop_index('event_comment_value_trgm', table_name='event_comment', postgresql_ops={'value': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_table('event_comment')
    op.drop_index(op.f('ix_analysis_metadata_analysis_uuid'), table_name='analysis_metadata')
    op.drop_table('analysis_metadata')
    op.drop_index(op.f('ix_analysis_child_observable_mapping_observable_uuid'), table_name='analysis_child_observable_mapping')
    op.drop_index(op.f('ix_analysis_child_observable_mapping_analysis_uuid'), table_name='analysis_child_observable_mapping')
    op.drop_table('analysis_child_observable_mapping')
    op.drop_index(op.f('ix_user_role_mapping_user_uuid'), table_name='user_role_mapping')
    op.drop_index(op.f('ix_user_role_mapping_user_role_uuid'), table_name='user_role_mapping')
    op.drop_table('user_role_mapping')
    op.drop_index(op.f('ix_user_history_record_uuid'), table_name='user_history')
    op.drop_index(op.f('ix_user_history_action_by_user_uuid'), table_name='user_history')
    op.drop_table('user_history')
    op.drop_index(op.f('ix_observable_tag_mapping_tag_uuid'), table_name='observable_tag_mapping')
    op.drop_index(op.f('ix_observable_tag_mapping_observable_uuid'), table_name='observable_tag_mapping')
    op.drop_table('observable_tag_mapping')
    op.drop_index(op.f('ix_observable_relationship_observable_uuid'), table_name='observable_relationship')
    op.drop_table('observable_relationship')
    op.drop_index(op.f('ix_observable_history_record_uuid'), table_name='observable_history')
    op.drop_index(op.f('ix_observable_history_action_by_user_uuid'), table_name='observable_history')
    op.drop_table('observable_history')
    op.drop_index(op.f('ix_event_remediation_time'), table_name='event')
    op.drop_index(op.f('ix_event_queue_uuid'), table_name='event')
    op.drop_index(op.f('ix_event_ownership_time'), table_name='event')
    op.drop_index(op.f('ix_event_event_time'), table_name='event')
    op.drop_index(op.f('ix_event_disposition_time'), table_name='event')
    op.drop_index(op.f('ix_event_created_time'), table_name='event')
    op.drop_index(op.f('ix_event_contain_time'), table_name='event')
    op.drop_index(op.f('ix_event_alert_time'), table_name='event')
    op.drop_table('event')
    op.drop_index(op.f('ix_analysis_module_type_tag_mapping_tag_uuid'), table_name='analysis_module_type_tag_mapping')
    op.drop_index(op.f('ix_analysis_module_type_tag_mapping_analysis_module_type_uuid'), table_name='analysis_module_type_tag_mapping')
    op.drop_table('analysis_module_type_tag_mapping')
    op.drop_index(op.f('ix_analysis_module_type_directive_mapping_directive_uuid'), table_name='analysis_module_type_directive_mapping')
    op.drop_index(op.f('ix_analysis_module_type_directive_mapping_analysis_module_type_uuid'), table_name='analysis_module_type_directive_mapping')
    op.drop_table('analysis_module_type_directive_mapping')
    op.drop_index(op.f('ix_analysis_run_time'), table_name='analysis')
    op.drop_index('analysis_module_type_target_cached_during_idx', table_name='analysis')
    op.drop_table('analysis')
    op.drop_table('user')
    op.drop_index(op.f('ix_threat_type_queue_mapping_threat_type_uuid'), table_name='threat_type_queue_mapping')
    op.drop_index(op.f('ix_threat_type_queue_mapping_queue_uuid'), table_name='threat_type_queue_mapping')
    op.drop_table('threat_type_queue_mapping')
    op.drop_index(op.f('ix_threat_threat_type_mapping_threat_uuid'), table_name='threat_threat_type_mapping')
    op.drop_index(op.f('ix_threat_threat_type_mapping_threat_type_uuid'), table_name='threat_threat_type_mapping')
    op.drop_table('threat_threat_type_mapping')
    op.drop_index(op.f('ix_threat_queue_mapping_threat_uuid'), table_name='threat_queue_mapping')
    op.drop_index(op.f('ix_threat_queue_mapping_queue_uuid'), table_name='threat_queue_mapping')
    op.drop_table('threat_queue_mapping')
    op.drop_index(op.f('ix_threat_actor_queue_mapping_threat_actor_uuid'), table_name='threat_actor_queue_mapping')
    op.drop_index(op.f('ix_threat_actor_queue_mapping_queue_uuid'), table_name='threat_actor_queue_mapping')
    op.drop_table('threat_actor_queue_mapping')
    op.drop_index('type_value', table_name='observable')
    op.drop_index('observable_value_trgm', table_name='observable', postgresql_ops={'value': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_index(op.f('ix_observable_whitelisted'), table_name='observable')
    op.drop_index(op.f('ix_observable_for_detection'), table_name='observable')
    op.drop_table('observable')
    op.drop_index(op.f('ix_metadata_time_value'), table_name='metadata_time')
    op.drop_table('metadata_time')
    op.drop_index(op.f('ix_metadata_tag_value'), table_name='metadata_tag')
    op.drop_table('metadata_tag')
    op.drop_index(op.f('ix_metadata_sort_value'), table_name='metadata_sort')
    op.drop_table('metadata_sort')
    op.drop_index(op.f('ix_metadata_display_value_value'), table_name='metadata_display_value')
    op.drop_table('metadata_display_value')
    op.drop_index(op.f('ix_metadata_display_type_value'), table_name='metadata_display_type')
    op.drop_table('metadata_display_type')
    op.drop_index(op.f('ix_metadata_directive_value'), table_name='metadata_directive')
    op.drop_table('metadata_directive')
    op.drop_index(op.f('ix_metadata_detection_point_value'), table_name='metadata_detection_point')
    op.drop_table('metadata_detection_point')
    op.drop_index(op.f('ix_event_vector_queue_mapping_queue_uuid'), table_name='event_vector_queue_mapping')
    op.drop_index(op.f('ix_event_vector_queue_mapping_event_vector_uuid'), table_name='event_vector_queue_mapping')
    op.drop_table('event_vector_queue_mapping')
    op.drop_index(op.f('ix_event_type_queue_mapping_queue_uuid'), table_name='event_type_queue_mapping')
    op.drop_index(op.f('ix_event_type_queue_mapping_event_type_uuid'), table_name='event_type_queue_mapping')
    op.drop_table('event_type_queue_mapping')
    op.drop_index(op.f('ix_event_status_queue_mapping_queue_uuid'), table_name='event_status_queue_mapping')
    op.drop_index(op.f('ix_event_status_queue_mapping_event_status_uuid'), table_name='event_status_queue_mapping')
    op.drop_table('event_status_queue_mapping')
    op.drop_index(op.f('ix_event_source_queue_mapping_queue_uuid'), table_name='event_source_queue_mapping')
    op.drop_index(op.f('ix_event_source_queue_mapping_event_source_uuid'), table_name='event_source_queue_mapping')
    op.drop_table('event_source_queue_mapping')
    op.drop_index(op.f('ix_event_severity_queue_mapping_queue_uuid'), table_name='event_severity_queue_mapping')
    op.drop_index(op.f('ix_event_severity_queue_mapping_event_severity_uuid'), table_name='event_severity_queue_mapping')
    op.drop_table('event_severity_queue_mapping')
    op.drop_index(op.f('ix_event_remediation_queue_mapping_queue_uuid'), table_name='event_remediation_queue_mapping')
    op.drop_index(op.f('ix_event_remediation_queue_mapping_event_remediation_uuid'), table_name='event_remediation_queue_mapping')
    op.drop_table('event_remediation_queue_mapping')
    op.drop_index(op.f('ix_event_prevention_tool_queue_mapping_queue_uuid'), table_name='event_prevention_tool_queue_mapping')
    op.drop_index(op.f('ix_event_prevention_tool_queue_mapping_event_prevention_tool_uuid'), table_name='event_prevention_tool_queue_mapping')
    op.drop_table('event_prevention_tool_queue_mapping')
    op.drop_index(op.f('ix_analysis_module_type_observable_type_mapping_observable_type_uuid'), table_name='analysis_module_type_observable_type_mapping')
    op.drop_index(op.f('ix_analysis_module_type_observable_type_mapping_analysis_module_type_uuid'), table_name='analysis_module_type_observable_type_mapping')
    op.drop_table('analysis_module_type_observable_type_mapping')
    op.drop_index(op.f('ix_user_role_value'), table_name='user_role')
    op.drop_table('user_role')
    op.drop_index(op.f('ix_threat_type_value'), table_name='threat_type')
    op.drop_table('threat_type')
    op.drop_index(op.f('ix_threat_actor_value'), table_name='threat_actor')
    op.drop_table('threat_actor')
    op.drop_index(op.f('ix_threat_value'), table_name='threat')
    op.drop_table('threat')
    op.drop_index(op.f('ix_submission_type_value'), table_name='submission_type')
    op.drop_table('submission_type')
    op.drop_index(op.f('ix_submission_tool_instance_value'), table_name='submission_tool_instance')
    op.drop_table('submission_tool_instance')
    op.drop_index(op.f('ix_submission_tool_value'), table_name='submission_tool')
    op.drop_table('submission_tool')
    op.drop_index(op.f('ix_seed_seed_time'), table_name='seed')
    op.drop_table('seed')
    op.drop_index(op.f('ix_queue_value'), table_name='queue')
    op.drop_table('queue')
    op.drop_index(op.f('ix_observable_type_value'), table_name='observable_type')
    op.drop_table('observable_type')
    op.drop_index(op.f('ix_observable_relationship_type_value'), table_name='observable_relationship_type')
    op.drop_table('observable_relationship_type')
    op.drop_table('metadata')
    op.drop_index(op.f('ix_event_vector_value'), table_name='event_vector')
    op.drop_table('event_vector')
    op.drop_index(op.f('ix_event_type_value'), table_name='event_type')
    op.drop_table('event_type')
    op.drop_index(op.f('ix_event_status_value'), table_name='event_status')
    op.drop_table('event_status')
    op.drop_index(op.f('ix_event_source_value'), table_name='event_source')
    op.drop_table('event_source')
    op.drop_index(op.f('ix_event_severity_value'), table_name='event_severity')
    op.drop_table('event_severity')
    op.drop_index(op.f('ix_event_remediation_value'), table_name='event_remediation')
    op.drop_table('event_remediation')
    op.drop_index(op.f('ix_event_prevention_tool_value'), table_name='event_prevention_tool')
    op.drop_table('event_prevention_tool')
    op.drop_index('value_version', table_name='analysis_module_type')
    op.drop_index(op.f('ix_analysis_module_type_version'), table_name='analysis_module_type')
    op.drop_index(op.f('ix_analysis_module_type_value'), table_name='analysis_module_type')
    op.drop_index('amt_value_trgm', table_name='analysis_module_type', postgresql_ops={'value': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_table('analysis_module_type')
    op.drop_index(op.f('ix_alert_disposition_value'), table_name='alert_disposition')
    op.drop_table('alert_disposition')
    # ### end Alembic commands ###