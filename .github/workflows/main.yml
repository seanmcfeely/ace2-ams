name: Build and Test

# Runs only when there is a pull request against the main branch
on:
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# All of the jobs run in parallel, but each step within a job is sequential
jobs:
  db:
    name: DB
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: bin/test-db.sh

  db-api:
    name: DB API
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: bin/test-db-api.sh

  gui-api:
    name: GUI API
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: bin/test-gui-api.sh

  frontend:
    name: Frontend
    runs-on: ubuntu-latest

    env:
      VITE_TESTING_MODE: yes

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check for .only test restrictions
        run: bin/frontend-check-for-only.sh

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Build
        run: cd frontend && npm install

      - name: Prettier
        run: cd frontend && npx prettier --check .

      - name: ESLint
        run: cd frontend && npx eslint .

      - name: Check for circular dependencies
        run: cd frontend && npx madge --ts-config tsconfig.json  --extensions ts,vue --circular --exclude models/* src/*

      - name: Unit tests
        run: cd frontend && npm run test:coverage

  e2e:
    name: End-to-End
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: E2E tests

      - name: Build and run environment
        run: docker compose -f frontend/docker-compose-ci.yml up -d

      - name: Wait for environment to be ready
        run: docker exec ace2-frontend bin/wait-for-gui.sh

      - name: E2E tests
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          config-file: cypress.config.ts
          config: video=false,screenshotOnRunFailure=false

      # - name: E2E tests
      #   run: docker exec ace2-frontend xvfb-run cypress run --e2e --headless --browser chrome --config-file "cypress.config.ts" --config video=false,screenshotOnRunFailure=false

      - name: Frontend logs
        run: docker logs ace2-frontend

      - name: Nginx logs
        run: docker logs ace2-ams

      - name: Database API logs
        run: docker logs ace2-db-api-frontend

      - name: GUI API logs
        run: docker logs ace2-gui-api-frontend

      - name: Database logs
        run: docker logs ace2-db-frontend

  component:
    name: Component tests
    runs-on: ubuntu-latest

    env:
      COMPOSE_FILE: docker-compose-ci.yml

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Component Tests
        run: bin/test-frontend-components.sh

  production-build:
    name: Production Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Ensure the GUI builds for production
        run: cd frontend && npm install && npm run build
