name: Build and Test

# Runs only when there is a pull request against the main branch
on:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# All of the jobs run in parallel, but each step within a job is sequential
jobs:
  backend:
    name: Backend
    runs-on: ubuntu-latest
    
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
      COOKIES_SAMESITE: lax
      COOKIES_SECURE: False
      JWT_ACCESS_EXPIRE_SECONDS: 900
      JWT_ALGORITHM: HS256
      JWT_REFRESH_EXPIRE_SECONDS: 43200
      JWT_SECRET: supersecret
      POSTGRES_DB: ace
      POSTGRES_USER: ace
      POSTGRES_PASSWORD: supersecret
      DATABASE_URL: postgresql://ace:supersecret@db:5432/ace

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Build
        run: cd api && docker-compose build api
          
      - name: Test
        run: cd api && docker-compose run -e TESTING=1 api pytest -vv
  frontend:
    name: Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
        
      - name: Build
        run: cd gui && npm install

      - name: Prettier
        run: cd gui && npx prettier --check .

      - name: ESLint
        run: cd gui && npx eslint .
        
      - name: Unit tests
        run: cd gui && npm run test:unit

  e2e:
    name: End-to-End
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Build Backend
        run: cd api && docker-compose build api
          
      - name: Run Backend
        run: cd api && docker-compose up -d
        
      - name: Build Frontend
        run: cd gui && npm install

      - name: E2E tests
        uses: cypress-io/github-action@v2
        with:
          start: cd gui && npm run production
          working-directory: gui
