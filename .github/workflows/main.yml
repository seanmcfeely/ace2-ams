name: Build and Test

# Runs only when there is a pull request against the main branch
on:
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# All of the jobs run in parallel, but each step within a job is sequential
jobs:
  backend:
    name: Backend
    runs-on: ubuntu-latest

    env:
      ACE_DEV: true
      DOCKER_BUILDKIT: 0
      COMPOSE_DOCKER_CLI_BUILD: 0
      COOKIES_SAMESITE: lax
      COOKIES_SECURE: False
      JWT_ACCESS_EXPIRE_SECONDS: 900
      JWT_ALGORITHM: HS256
      JWT_REFRESH_EXPIRE_SECONDS: 43200
      JWT_SECRET: supersecret
      POSTGRES_DB: ace
      POSTGRES_USER: ace
      POSTGRES_PASSWORD: supersecret
      DATABASE_URL: postgresql://ace:supersecret@db:5432/ace
      DATABASE_TEST_URL: postgresql://ace:supersecret@db:5432/ace_test
      TESTING: yes

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: docker-compose build api

      - name: Test
        run: docker-compose run -e TESTING=1 api pytest -vv
  frontend:
    name: Frontend
    runs-on: ubuntu-latest

    env:
      VITE_TESTING: yes

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Build
        run: cd frontend && npm install

      - name: Prettier
        run: cd frontend && npx prettier --check .

      - name: ESLint
        run: cd frontend && npx eslint .

      - name: Unit tests
        run: cd frontend && npm run test:unit

  e2e:
    name: End-to-End
    runs-on: ubuntu-latest

    env:
      ACE_DEV: true
      DOCKER_BUILDKIT: 0
      COMPOSE_DOCKER_CLI_BUILD: 0
      COOKIES_SAMESITE: lax
      COOKIES_SECURE: False
      JWT_ACCESS_EXPIRE_SECONDS: 900
      JWT_ALGORITHM: HS256
      JWT_REFRESH_EXPIRE_SECONDS: 43200
      JWT_SECRET: supersecret
      POSTGRES_DB: ace
      POSTGRES_USER: ace
      POSTGRES_PASSWORD: supersecret
      DATABASE_URL: postgresql://ace:supersecret@db:5432/ace
      DATABASE_TEST_URL: postgresql://ace:supersecret@db:5432/ace_test
      TESTING: yes

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Ensure GUI builds
        run: cd frontend && npm install && npm run build

      - name: Remove the dist folder
        run: cd frontend && rm -rf dist

      - name: Run environment
        run: docker-compose -f docker-compose.yml -f docker-compose-e2e.yml up -d

      - name: Temp
        run: docker exec ace2-ams-gui ls -lah /app

      # - name: Wait for API and GUI to be accessible
      #   run: bin/wait-for-gui.sh

      - name: Wait for the API to be accessible
        uses: jtalk/url-health-check-action@v2
        with:
          url: http://localhost:8080/api/ping
          max-attempts: 60
          retry-delay: 1s

      - name: Wait for the GUI to be accessible
        uses: jtalk/url-health-check-action@v2
        with:
          url: http://localhost:8080/login
          max-attempts: 60
          retry-delay: 1s

      - name: E2E tests
        run: docker exec ace2-ams-gui xvfb-run cypress run --headed --browser chrome --config video=false,screenshotOnRunFailure=false

      - name: Frontend logs
        run: docker logs ace2-ams-gui

      - name: Nginx logs
        run: docker logs ace2-ams

      - name: FastAPI logs
        run: docker logs ace2-ams-api

      - name: Database logs
        run: docker logs ace2-ams-db
