"""Initial

Revision ID: e4281b937388
Revises: 
Create Date: 2022-02-07 17:13:01.877423
"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic
revision = 'e4281b937388'
down_revision = None
branch_labels = None
depends_on = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alert_disposition',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('rank')
    )
    op.create_index(op.f('ix_alert_disposition_value'), 'alert_disposition', ['value'], unique=True)
    op.create_table('alert_history',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('action_by', sa.String(), nullable=False),
    sa.Column('action_time', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('record_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('field', sa.String(), nullable=True),
    sa.Column('diff', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_alert_history_record_uuid'), 'alert_history', ['record_uuid'], unique=False)
    op.create_table('alert_queue',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_alert_queue_value'), 'alert_queue', ['value'], unique=True)
    op.create_table('alert_tool',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_alert_tool_value'), 'alert_tool', ['value'], unique=True)
    op.create_table('alert_tool_instance',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_alert_tool_instance_value'), 'alert_tool_instance', ['value'], unique=True)
    op.create_table('alert_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_alert_type_value'), 'alert_type', ['value'], unique=True)
    op.create_table('analysis_module_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('extended_version', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('manual', sa.Boolean(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('value', 'version', name='value_version_uc')
    )
    op.create_index(op.f('ix_analysis_module_type_value'), 'analysis_module_type', ['value'], unique=False)
    op.create_index(op.f('ix_analysis_module_type_version'), 'analysis_module_type', ['version'], unique=False)
    op.create_table('event_history',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('action_by', sa.String(), nullable=False),
    sa.Column('action_time', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('record_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('field', sa.String(), nullable=True),
    sa.Column('diff', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_history_record_uuid'), 'event_history', ['record_uuid'], unique=False)
    op.create_table('event_prevention_tool',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_prevention_tool_value'), 'event_prevention_tool', ['value'], unique=True)
    op.create_table('event_queue',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_queue_value'), 'event_queue', ['value'], unique=True)
    op.create_table('event_remediation',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_remediation_value'), 'event_remediation', ['value'], unique=True)
    op.create_table('event_risk_level',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_risk_level_value'), 'event_risk_level', ['value'], unique=True)
    op.create_table('event_source',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_source_value'), 'event_source', ['value'], unique=True)
    op.create_table('event_status',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_status_value'), 'event_status', ['value'], unique=True)
    op.create_table('event_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_type_value'), 'event_type', ['value'], unique=True)
    op.create_table('event_vector',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_vector_value'), 'event_vector', ['value'], unique=True)
    op.create_table('node',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('node_type', sa.String(), nullable=True),
    sa.Column('version', postgresql.UUID(as_uuid=True), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('node_directive',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_node_directive_value'), 'node_directive', ['value'], unique=True)
    op.create_table('node_tag',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_node_tag_value'), 'node_tag', ['value'], unique=True)
    op.create_table('node_threat',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_node_threat_value'), 'node_threat', ['value'], unique=True)
    op.create_table('node_threat_actor',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_node_threat_actor_value'), 'node_threat_actor', ['value'], unique=True)
    op.create_table('node_threat_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_node_threat_type_value'), 'node_threat_type', ['value'], unique=True)
    op.create_table('observable_type',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_observable_type_value'), 'observable_type', ['value'], unique=True)
    op.create_table('user_role',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_user_role_value'), 'user_role', ['value'], unique=True)
    op.create_table('analysis',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('analysis_module_type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('stack_trace', sa.String(), nullable=True),
    sa.Column('summary', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['analysis_module_type_uuid'], ['analysis_module_type.uuid'], ),
    sa.ForeignKeyConstraint(['uuid'], ['node.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('analysis_module_type_directive_mapping',
    sa.Column('analysis_module_type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('directive_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['analysis_module_type_uuid'], ['analysis_module_type.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['directive_uuid'], ['node_directive.uuid'], ),
    sa.PrimaryKeyConstraint('analysis_module_type_uuid', 'directive_uuid')
    )
    op.create_index(op.f('ix_analysis_module_type_directive_mapping_analysis_module_type_uuid'), 'analysis_module_type_directive_mapping', ['analysis_module_type_uuid'], unique=False)
    op.create_index(op.f('ix_analysis_module_type_directive_mapping_directive_uuid'), 'analysis_module_type_directive_mapping', ['directive_uuid'], unique=False)
    op.create_table('analysis_module_type_observable_type_mapping',
    sa.Column('analysis_module_type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('observable_type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['analysis_module_type_uuid'], ['analysis_module_type.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['observable_type_uuid'], ['observable_type.uuid'], ),
    sa.PrimaryKeyConstraint('analysis_module_type_uuid', 'observable_type_uuid')
    )
    op.create_index(op.f('ix_analysis_module_type_observable_type_mapping_analysis_module_type_uuid'), 'analysis_module_type_observable_type_mapping', ['analysis_module_type_uuid'], unique=False)
    op.create_index(op.f('ix_analysis_module_type_observable_type_mapping_observable_type_uuid'), 'analysis_module_type_observable_type_mapping', ['observable_type_uuid'], unique=False)
    op.create_table('analysis_module_type_tag_mapping',
    sa.Column('analysis_module_type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('tag_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['analysis_module_type_uuid'], ['analysis_module_type.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_uuid'], ['node_tag.uuid'], ),
    sa.PrimaryKeyConstraint('analysis_module_type_uuid', 'tag_uuid')
    )
    op.create_index(op.f('ix_analysis_module_type_tag_mapping_analysis_module_type_uuid'), 'analysis_module_type_tag_mapping', ['analysis_module_type_uuid'], unique=False)
    op.create_index(op.f('ix_analysis_module_type_tag_mapping_tag_uuid'), 'analysis_module_type_tag_mapping', ['tag_uuid'], unique=False)
    op.create_table('node_directive_mapping',
    sa.Column('node_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('directive_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['directive_uuid'], ['node_directive.uuid'], ),
    sa.ForeignKeyConstraint(['node_uuid'], ['node.uuid'], ),
    sa.PrimaryKeyConstraint('node_uuid', 'directive_uuid')
    )
    op.create_index(op.f('ix_node_directive_mapping_directive_uuid'), 'node_directive_mapping', ['directive_uuid'], unique=False)
    op.create_index(op.f('ix_node_directive_mapping_node_uuid'), 'node_directive_mapping', ['node_uuid'], unique=False)
    op.create_table('node_tag_mapping',
    sa.Column('node_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('tag_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['node_uuid'], ['node.uuid'], ),
    sa.ForeignKeyConstraint(['tag_uuid'], ['node_tag.uuid'], ),
    sa.PrimaryKeyConstraint('node_uuid', 'tag_uuid')
    )
    op.create_index(op.f('ix_node_tag_mapping_node_uuid'), 'node_tag_mapping', ['node_uuid'], unique=False)
    op.create_index(op.f('ix_node_tag_mapping_tag_uuid'), 'node_tag_mapping', ['tag_uuid'], unique=False)
    op.create_table('node_threat_actor_mapping',
    sa.Column('node_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('threat_actor_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['node_uuid'], ['node.uuid'], ),
    sa.ForeignKeyConstraint(['threat_actor_uuid'], ['node_threat_actor.uuid'], ),
    sa.PrimaryKeyConstraint('node_uuid', 'threat_actor_uuid')
    )
    op.create_index(op.f('ix_node_threat_actor_mapping_node_uuid'), 'node_threat_actor_mapping', ['node_uuid'], unique=False)
    op.create_index(op.f('ix_node_threat_actor_mapping_threat_actor_uuid'), 'node_threat_actor_mapping', ['threat_actor_uuid'], unique=False)
    op.create_table('node_threat_mapping',
    sa.Column('node_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('threat_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['node_uuid'], ['node.uuid'], ),
    sa.ForeignKeyConstraint(['threat_uuid'], ['node_threat.uuid'], ),
    sa.PrimaryKeyConstraint('node_uuid', 'threat_uuid')
    )
    op.create_index(op.f('ix_node_threat_mapping_node_uuid'), 'node_threat_mapping', ['node_uuid'], unique=False)
    op.create_index(op.f('ix_node_threat_mapping_threat_uuid'), 'node_threat_mapping', ['threat_uuid'], unique=False)
    op.create_table('node_threat_node_threat_type_mapping',
    sa.Column('node_threat_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('node_threat_type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['node_threat_type_uuid'], ['node_threat_type.uuid'], ),
    sa.ForeignKeyConstraint(['node_threat_uuid'], ['node_threat.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('node_threat_uuid', 'node_threat_type_uuid')
    )
    op.create_index(op.f('ix_node_threat_node_threat_type_mapping_node_threat_type_uuid'), 'node_threat_node_threat_type_mapping', ['node_threat_type_uuid'], unique=False)
    op.create_index(op.f('ix_node_threat_node_threat_type_mapping_node_threat_uuid'), 'node_threat_node_threat_type_mapping', ['node_threat_uuid'], unique=False)
    op.create_table('node_tree',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('node_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('root_node_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('node_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('parent_tree_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['node_uuid'], ['node.uuid'], ),
    sa.ForeignKeyConstraint(['parent_tree_uuid'], ['node_tree.uuid'], ),
    sa.ForeignKeyConstraint(['root_node_uuid'], ['node.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_node_tree_root_node_uuid'), 'node_tree', ['root_node_uuid'], unique=False)
    op.create_index('uix_root_node', 'node_tree', ['root_node_uuid', 'node_uuid'], unique=True, postgresql_where=sa.text('parent_tree_uuid IS NULL'))
    op.create_index('uix_root_node_parent', 'node_tree', ['root_node_uuid', 'node_uuid', 'parent_tree_uuid'], unique=True, postgresql_where=sa.text('parent_tree_uuid IS NOT NULL'))
    op.create_table('observable',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('context', sa.String(), nullable=True),
    sa.Column('expires_on', sa.DateTime(timezone=True), nullable=True),
    sa.Column('for_detection', sa.Boolean(), nullable=False),
    sa.Column('redirection_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('time', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['redirection_uuid'], ['observable.uuid'], ),
    sa.ForeignKeyConstraint(['type_uuid'], ['observable_type.uuid'], ),
    sa.ForeignKeyConstraint(['uuid'], ['node.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('type_uuid', 'value', name='type_value_uc')
    )
    op.create_index('observable_value_trgm', 'observable', ['value'], unique=False, postgresql_ops={'value': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_index('type_value', 'observable', ['type_uuid', 'value'], unique=False)
    op.create_table('user',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('default_alert_queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('default_event_queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('timezone', sa.String(), nullable=False),
    sa.Column('training', sa.Boolean(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['default_alert_queue_uuid'], ['alert_queue.uuid'], ),
    sa.ForeignKeyConstraint(['default_event_queue_uuid'], ['event_queue.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('event',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('alert_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('contain_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('creation_time', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('disposition_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('event_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('owner_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('ownership_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('remediation_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('risk_level_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('source_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('status_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('type_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['queue_uuid'], ['event_queue.uuid'], ),
    sa.ForeignKeyConstraint(['risk_level_uuid'], ['event_risk_level.uuid'], ),
    sa.ForeignKeyConstraint(['source_uuid'], ['event_source.uuid'], ),
    sa.ForeignKeyConstraint(['status_uuid'], ['event_status.uuid'], ),
    sa.ForeignKeyConstraint(['type_uuid'], ['event_type.uuid'], ),
    sa.ForeignKeyConstraint(['uuid'], ['node.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_event_alert_time'), 'event', ['alert_time'], unique=False)
    op.create_index(op.f('ix_event_contain_time'), 'event', ['contain_time'], unique=False)
    op.create_index(op.f('ix_event_creation_time'), 'event', ['creation_time'], unique=False)
    op.create_index(op.f('ix_event_disposition_time'), 'event', ['disposition_time'], unique=False)
    op.create_index(op.f('ix_event_event_time'), 'event', ['event_time'], unique=False)
    op.create_index(op.f('ix_event_ownership_time'), 'event', ['ownership_time'], unique=False)
    op.create_index(op.f('ix_event_queue_uuid'), 'event', ['queue_uuid'], unique=False)
    op.create_index(op.f('ix_event_remediation_time'), 'event', ['remediation_time'], unique=False)
    op.create_table('node_comment',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('insert_time', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('node_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['node_uuid'], ['node.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('node_uuid', 'value', name='node_value_uc')
    )
    op.create_index('comment_value_trgm', 'node_comment', ['value'], unique=False, postgresql_ops={'value': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_index(op.f('ix_node_comment_node_uuid'), 'node_comment', ['node_uuid'], unique=False)
    op.create_table('user_role_mapping',
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_role_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['user_role_uuid'], ['user_role.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_uuid', 'user_role_uuid')
    )
    op.create_index(op.f('ix_user_role_mapping_user_role_uuid'), 'user_role_mapping', ['user_role_uuid'], unique=False)
    op.create_index(op.f('ix_user_role_mapping_user_uuid'), 'user_role_mapping', ['user_uuid'], unique=False)
    op.create_table('alert',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('disposition_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('disposition_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('disposition_user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('event_time', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('insert_time', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('instructions', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('owner_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('queue_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('tool_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('tool_instance_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('type_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['disposition_user_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['disposition_uuid'], ['alert_disposition.uuid'], ),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['owner_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['queue_uuid'], ['alert_queue.uuid'], ),
    sa.ForeignKeyConstraint(['tool_instance_uuid'], ['alert_tool_instance.uuid'], ),
    sa.ForeignKeyConstraint(['tool_uuid'], ['alert_tool.uuid'], ),
    sa.ForeignKeyConstraint(['type_uuid'], ['alert_type.uuid'], ),
    sa.ForeignKeyConstraint(['uuid'], ['node.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_alert_disposition_time'), 'alert', ['disposition_time'], unique=False)
    op.create_index(op.f('ix_alert_disposition_user_uuid'), 'alert', ['disposition_user_uuid'], unique=False)
    op.create_index(op.f('ix_alert_disposition_uuid'), 'alert', ['disposition_uuid'], unique=False)
    op.create_index(op.f('ix_alert_event_time'), 'alert', ['event_time'], unique=False)
    op.create_index(op.f('ix_alert_event_uuid'), 'alert', ['event_uuid'], unique=False)
    op.create_index(op.f('ix_alert_insert_time'), 'alert', ['insert_time'], unique=False)
    op.create_index(op.f('ix_alert_owner_uuid'), 'alert', ['owner_uuid'], unique=False)
    op.create_index(op.f('ix_alert_queue_uuid'), 'alert', ['queue_uuid'], unique=False)
    op.create_index(op.f('ix_alert_tool_instance_uuid'), 'alert', ['tool_instance_uuid'], unique=False)
    op.create_index(op.f('ix_alert_tool_uuid'), 'alert', ['tool_uuid'], unique=False)
    op.create_index(op.f('ix_alert_type_uuid'), 'alert', ['type_uuid'], unique=False)
    op.create_index('name_trgm', 'alert', ['name'], unique=False, postgresql_ops={'name': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_table('event_prevention_tool_mapping',
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('prevention_tool_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['prevention_tool_uuid'], ['event_prevention_tool.uuid'], ),
    sa.PrimaryKeyConstraint('event_uuid', 'prevention_tool_uuid')
    )
    op.create_index(op.f('ix_event_prevention_tool_mapping_event_uuid'), 'event_prevention_tool_mapping', ['event_uuid'], unique=False)
    op.create_index(op.f('ix_event_prevention_tool_mapping_prevention_tool_uuid'), 'event_prevention_tool_mapping', ['prevention_tool_uuid'], unique=False)
    op.create_table('event_remediation_mapping',
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('remediation_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['remediation_uuid'], ['event_remediation.uuid'], ),
    sa.PrimaryKeyConstraint('event_uuid', 'remediation_uuid')
    )
    op.create_index(op.f('ix_event_remediation_mapping_event_uuid'), 'event_remediation_mapping', ['event_uuid'], unique=False)
    op.create_index(op.f('ix_event_remediation_mapping_remediation_uuid'), 'event_remediation_mapping', ['remediation_uuid'], unique=False)
    op.create_table('event_vector_mapping',
    sa.Column('event_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('vector_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_uuid'], ['event.uuid'], ),
    sa.ForeignKeyConstraint(['vector_uuid'], ['event_vector.uuid'], ),
    sa.PrimaryKeyConstraint('event_uuid', 'vector_uuid')
    )
    op.create_index(op.f('ix_event_vector_mapping_event_uuid'), 'event_vector_mapping', ['event_uuid'], unique=False)
    op.create_index(op.f('ix_event_vector_mapping_vector_uuid'), 'event_vector_mapping', ['vector_uuid'], unique=False)
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_event_vector_mapping_vector_uuid'), table_name='event_vector_mapping')
    op.drop_index(op.f('ix_event_vector_mapping_event_uuid'), table_name='event_vector_mapping')
    op.drop_table('event_vector_mapping')
    op.drop_index(op.f('ix_event_remediation_mapping_remediation_uuid'), table_name='event_remediation_mapping')
    op.drop_index(op.f('ix_event_remediation_mapping_event_uuid'), table_name='event_remediation_mapping')
    op.drop_table('event_remediation_mapping')
    op.drop_index(op.f('ix_event_prevention_tool_mapping_prevention_tool_uuid'), table_name='event_prevention_tool_mapping')
    op.drop_index(op.f('ix_event_prevention_tool_mapping_event_uuid'), table_name='event_prevention_tool_mapping')
    op.drop_table('event_prevention_tool_mapping')
    op.drop_index('name_trgm', table_name='alert', postgresql_ops={'name': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_index(op.f('ix_alert_type_uuid'), table_name='alert')
    op.drop_index(op.f('ix_alert_tool_uuid'), table_name='alert')
    op.drop_index(op.f('ix_alert_tool_instance_uuid'), table_name='alert')
    op.drop_index(op.f('ix_alert_queue_uuid'), table_name='alert')
    op.drop_index(op.f('ix_alert_owner_uuid'), table_name='alert')
    op.drop_index(op.f('ix_alert_insert_time'), table_name='alert')
    op.drop_index(op.f('ix_alert_event_uuid'), table_name='alert')
    op.drop_index(op.f('ix_alert_event_time'), table_name='alert')
    op.drop_index(op.f('ix_alert_disposition_uuid'), table_name='alert')
    op.drop_index(op.f('ix_alert_disposition_user_uuid'), table_name='alert')
    op.drop_index(op.f('ix_alert_disposition_time'), table_name='alert')
    op.drop_table('alert')
    op.drop_index(op.f('ix_user_role_mapping_user_uuid'), table_name='user_role_mapping')
    op.drop_index(op.f('ix_user_role_mapping_user_role_uuid'), table_name='user_role_mapping')
    op.drop_table('user_role_mapping')
    op.drop_index(op.f('ix_node_comment_node_uuid'), table_name='node_comment')
    op.drop_index('comment_value_trgm', table_name='node_comment', postgresql_ops={'value': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_table('node_comment')
    op.drop_index(op.f('ix_event_remediation_time'), table_name='event')
    op.drop_index(op.f('ix_event_queue_uuid'), table_name='event')
    op.drop_index(op.f('ix_event_ownership_time'), table_name='event')
    op.drop_index(op.f('ix_event_event_time'), table_name='event')
    op.drop_index(op.f('ix_event_disposition_time'), table_name='event')
    op.drop_index(op.f('ix_event_creation_time'), table_name='event')
    op.drop_index(op.f('ix_event_contain_time'), table_name='event')
    op.drop_index(op.f('ix_event_alert_time'), table_name='event')
    op.drop_table('event')
    op.drop_table('user')
    op.drop_index('type_value', table_name='observable')
    op.drop_index('observable_value_trgm', table_name='observable', postgresql_ops={'value': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_table('observable')
    op.drop_index('uix_root_node_parent', table_name='node_tree', postgresql_where=sa.text('parent_tree_uuid IS NOT NULL'))
    op.drop_index('uix_root_node', table_name='node_tree', postgresql_where=sa.text('parent_tree_uuid IS NULL'))
    op.drop_index(op.f('ix_node_tree_root_node_uuid'), table_name='node_tree')
    op.drop_table('node_tree')
    op.drop_index(op.f('ix_node_threat_node_threat_type_mapping_node_threat_uuid'), table_name='node_threat_node_threat_type_mapping')
    op.drop_index(op.f('ix_node_threat_node_threat_type_mapping_node_threat_type_uuid'), table_name='node_threat_node_threat_type_mapping')
    op.drop_table('node_threat_node_threat_type_mapping')
    op.drop_index(op.f('ix_node_threat_mapping_threat_uuid'), table_name='node_threat_mapping')
    op.drop_index(op.f('ix_node_threat_mapping_node_uuid'), table_name='node_threat_mapping')
    op.drop_table('node_threat_mapping')
    op.drop_index(op.f('ix_node_threat_actor_mapping_threat_actor_uuid'), table_name='node_threat_actor_mapping')
    op.drop_index(op.f('ix_node_threat_actor_mapping_node_uuid'), table_name='node_threat_actor_mapping')
    op.drop_table('node_threat_actor_mapping')
    op.drop_index(op.f('ix_node_tag_mapping_tag_uuid'), table_name='node_tag_mapping')
    op.drop_index(op.f('ix_node_tag_mapping_node_uuid'), table_name='node_tag_mapping')
    op.drop_table('node_tag_mapping')
    op.drop_index(op.f('ix_node_directive_mapping_node_uuid'), table_name='node_directive_mapping')
    op.drop_index(op.f('ix_node_directive_mapping_directive_uuid'), table_name='node_directive_mapping')
    op.drop_table('node_directive_mapping')
    op.drop_index(op.f('ix_analysis_module_type_tag_mapping_tag_uuid'), table_name='analysis_module_type_tag_mapping')
    op.drop_index(op.f('ix_analysis_module_type_tag_mapping_analysis_module_type_uuid'), table_name='analysis_module_type_tag_mapping')
    op.drop_table('analysis_module_type_tag_mapping')
    op.drop_index(op.f('ix_analysis_module_type_observable_type_mapping_observable_type_uuid'), table_name='analysis_module_type_observable_type_mapping')
    op.drop_index(op.f('ix_analysis_module_type_observable_type_mapping_analysis_module_type_uuid'), table_name='analysis_module_type_observable_type_mapping')
    op.drop_table('analysis_module_type_observable_type_mapping')
    op.drop_index(op.f('ix_analysis_module_type_directive_mapping_directive_uuid'), table_name='analysis_module_type_directive_mapping')
    op.drop_index(op.f('ix_analysis_module_type_directive_mapping_analysis_module_type_uuid'), table_name='analysis_module_type_directive_mapping')
    op.drop_table('analysis_module_type_directive_mapping')
    op.drop_table('analysis')
    op.drop_index(op.f('ix_user_role_value'), table_name='user_role')
    op.drop_table('user_role')
    op.drop_index(op.f('ix_observable_type_value'), table_name='observable_type')
    op.drop_table('observable_type')
    op.drop_index(op.f('ix_node_threat_type_value'), table_name='node_threat_type')
    op.drop_table('node_threat_type')
    op.drop_index(op.f('ix_node_threat_actor_value'), table_name='node_threat_actor')
    op.drop_table('node_threat_actor')
    op.drop_index(op.f('ix_node_threat_value'), table_name='node_threat')
    op.drop_table('node_threat')
    op.drop_index(op.f('ix_node_tag_value'), table_name='node_tag')
    op.drop_table('node_tag')
    op.drop_index(op.f('ix_node_directive_value'), table_name='node_directive')
    op.drop_table('node_directive')
    op.drop_table('node')
    op.drop_index(op.f('ix_event_vector_value'), table_name='event_vector')
    op.drop_table('event_vector')
    op.drop_index(op.f('ix_event_type_value'), table_name='event_type')
    op.drop_table('event_type')
    op.drop_index(op.f('ix_event_status_value'), table_name='event_status')
    op.drop_table('event_status')
    op.drop_index(op.f('ix_event_source_value'), table_name='event_source')
    op.drop_table('event_source')
    op.drop_index(op.f('ix_event_risk_level_value'), table_name='event_risk_level')
    op.drop_table('event_risk_level')
    op.drop_index(op.f('ix_event_remediation_value'), table_name='event_remediation')
    op.drop_table('event_remediation')
    op.drop_index(op.f('ix_event_queue_value'), table_name='event_queue')
    op.drop_table('event_queue')
    op.drop_index(op.f('ix_event_prevention_tool_value'), table_name='event_prevention_tool')
    op.drop_table('event_prevention_tool')
    op.drop_index(op.f('ix_event_history_record_uuid'), table_name='event_history')
    op.drop_table('event_history')
    op.drop_index(op.f('ix_analysis_module_type_version'), table_name='analysis_module_type')
    op.drop_index(op.f('ix_analysis_module_type_value'), table_name='analysis_module_type')
    op.drop_table('analysis_module_type')
    op.drop_index(op.f('ix_alert_type_value'), table_name='alert_type')
    op.drop_table('alert_type')
    op.drop_index(op.f('ix_alert_tool_instance_value'), table_name='alert_tool_instance')
    op.drop_table('alert_tool_instance')
    op.drop_index(op.f('ix_alert_tool_value'), table_name='alert_tool')
    op.drop_table('alert_tool')
    op.drop_index(op.f('ix_alert_queue_value'), table_name='alert_queue')
    op.drop_table('alert_queue')
    op.drop_index(op.f('ix_alert_history_record_uuid'), table_name='alert_history')
    op.drop_table('alert_history')
    op.drop_index(op.f('ix_alert_disposition_value'), table_name='alert_disposition')
    op.drop_table('alert_disposition')
    # ### end Alembic commands ###