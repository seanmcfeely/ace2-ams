version: "3.9"

services:
  db:
    container_name: ace2-ams-db
    build:
      context: ./backend
      dockerfile: ./db/Dockerfile
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 6666:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  api:
    depends_on:
      - db
    container_name: ace2-ams-api
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    environment:
      # The DATABASE_URL environment variable needs to be in the form of:
      # postgresql://<user>:<password>@db:5432/<database>
      - ACE_DEV=${ACE_DEV}
      - COOKIES_SAMESITE=${COOKIES_SAMESITE}
      - COOKIES_SECURE=${COOKIES_SECURE}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_ACCESS_EXPIRE_SECONDS=${JWT_ACCESS_EXPIRE_SECONDS}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_REFRESH_EXPIRE_SECONDS=${JWT_REFRESH_EXPIRE_SECONDS}
      - JWT_SECRET=${JWT_SECRET}
      - LOG_LEVEL=debug
      - SQL_ECHO=${SQL_ECHO}
      - TESTING=${TESTING}
    ports:
      - 7777:80
    volumes:
      - ./backend/app:/app
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; /start-reload.sh'

  gui:
    depends_on:
      - api
    container_name: ace2-ams-gui
    build:
      context: ./frontend
      dockerfile: ./Dockerfile.dev
    environment:
      - VUE_APP_BACKEND_URL=http://ace2-ams:8080/api/
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: bash -c 'while !</dev/tcp/api/80; do sleep 1; done; npm run serve'

  ace2-ams:
    depends_on:
      - gui
    container_name: ace2-ams
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    ports:
      - 8080:8080

volumes:
  postgres_data:
